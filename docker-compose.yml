version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: zookeeper
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:5.3.1
    depends_on:
      - zookeeper
    ports:
      #     This exposes 9092 for external connections to the broker
      #     Use kafka:29092 for connections internal on the docker network
      #     See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:5.3.1
    ports:
      - 8081:8081
    depends_on:
      - zookeeper
      - kafka
#    command: "bash -c -a 'echo Waiting for Kafka to be ready... && \
#                           /etc/confluent/docker/configure && \
#                           cub kafka-ready -b kafka:9092 1 60 --config /etc/kafka/kafka.properties && \
#                           sleep 5 && \
#                           kafka-topics --zookeeper zookeeper:2181 --topic paintings --create --replication-factor 2 --partitions 2 && \
#                           kafka-topics --zookeeper zookeeper:2181 --topic paintings.vectors --create --replication-factor 2 --partitions 2'"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    ports:
      - 9200:9200
    environment:
      - node.name=elasticsearch
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    command: >
        /bin/sh -c "/wait-for-it/wait-for-it.sh -t 60 localhost:9200 -- curl -v -X PUT -H 'Content-Type: application/json' -d @/paintings.mapping.json http://localhost:9200/paintings > /start.log & /usr/local/bin/docker-entrypoint.sh"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - $PWD/esdata:/usr/share/elasticsearch/data
      - $PWD/paintings.mapping.json:/paintings.mapping.json
      - $PWD/wait-for-it:/wait-for-it


  kafka-connect:
    container_name: kafka-connect
    image: confluentinc/cp-kafka-connect:5.3.1
    ports:
      - 8083:8083
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-statuses
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java'
      ELASTIC_HOST: elasticsearch
      CONNECT_HOST: kafka-connect


  fileserver:
    container_name: fileserver
    image: nginx:stable-alpine
    ports:
      - 9090:80
    volumes:
      - paintings:/usr/share/nginx/html/paintings

volumes:
  paintings:
    external: true
